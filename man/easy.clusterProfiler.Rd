
% Generated by roxygen2 (4.0.0): do not edit by hand
\name{easy.clusterProfiler}
\alias{easy.clusterProfiler}
\title{easy.clusterProfiler}
\usage{
easy.clusterProfiler()
}
\arguments{
  \item{keggline}{A clusterProfiler data}
  \item{bar.col}{a vector scale of bar  colour }
 \item{line.col}{a vector scale of line colour }
 \item{bar.height.scale}{kegg pathway bar max height }
 \item{gean.name}{if TURE will add gean name }
 \item{pathway.name}{if TURE will add pathway name }
}

\value{
The easy to plot clusterProfiler of \code{clusterProfiler data}
}
\description{
The easy to plot clusterProfiler
}
\examples{
library(clusterProfiler)
x<-readxl::read_excel(paste(system.file("data", package = "pathways"),
           "Col-top50.xlsx",sep = "/"))
library(org.Mm.eg.db)
library(pathways)
data<- bitr(x$Gene, fromType = "ENSEMBL", toType = c( "ENTREZID"), OrgDb = org.Mm.eg.db)
#kegg using mmu
kegg <- enrichKEGG(
  gene =data$ENTREZID,
  keyType = "kegg",
  organism  = 'mmu',
  pvalueCutoff  = 1,
  pAdjustMethod  = "BH",
  qvalueCutoff  = 1
)

easy.clusterProfiler(keggline = kegg@result,name.begin =6, gean.name = F,
                     bar.height.scale = 1,scale =T)
# x,y,col
x[,c(1:5)]->plotdata
colnames(data)[1]<-colnames(plotdata)[1]
dplyr::left_join(data,plotdata,colnames(plotdata)[1])[,-1]->plot
plot[,-1]%>%{log(.+1)}%>%t%>%scale()%>%t%>%as.data.frame()->plot[,-1]
plot%>%
  tidyr::pivot_longer(cols =  -ENTREZID)%>%.[.$ENTREZID%in%get.all.sector.index(),]->plotnewdata
add.do(x=plotnewdata$ENTREZID,h=plotnewdata$name,
       col = plotnewdata$value,scale_height = 0.5)->heatmap1

# x,y,col

x[,c(7:11)]->plotdata

plot[,-1]%>%{log(.+1)}%>%t%>%scale()%>%t%>%as.data.frame()->plot[,-1]
plot%>%
  tidyr::pivot_longer(cols =  -ENTREZID)%>%.[.$ENTREZID%in%get.all.sector.index(),]->plotnewdata
plotnewdata$value[is.nan( plotnewdata$value)]<-0
add.do(x=plotnewdata$ENTREZID,h=plotnewdata$name,scale_height = 0.5,begin = 0.6,
       col = plotnewdata$value)->heatmap2

#name
pas <- function(.x,.y) {
  paste(rep(" ",time=.y),.x,sep = "")

}
rep(" ",1)

map2_chr(plotnewdata$ENTREZID,
         {str_length(plotnewdata$ENTREZID)%>%
             max-str_length(plotnewdata$ENTREZID)},
         pas)->namw


# add name

add.name(x=plotnewdata$ENTREZID,begin = 10,adj = c(0,0.5),
         name = namw,col = "black")


lgd_list_vertical = packLegend(heatmap1)
draw(lgd_list_vertical, x = unit(200,"mm"), y = unit(0.5,"mm"), just = c("left", "bottom"))


}
