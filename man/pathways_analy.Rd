% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyst.R
\name{pathways_analy}
\alias{pathways_analy}
\title{pathways_analy to pathways and analy}
\usage{
pathways_analy(
  data,
  group,
  org = "hsa",
  p_model = c("phyper", "fisher"),
  scale = T,
  p.adjust.methods = "holm",
  import_model = c("betweenness", "degree")
)
}
\arguments{
\item{data}{a list of data}

\item{group}{data group}

\item{org}{looking for https://www.genome.jp/kegg/catalog/org_list.html,using fread to keggAPI}

\item{scale}{scale of data ,It well to .get_data_analyst_plot}

\item{p.adjust.methods}{looking for  p.adjust}

\item{import_model}{import_model=c("betweenness","degree")}

\item{fisher.alternative}{alternative  of fisher.test}
}
\value{
metaProfiler data
}
\description{
pathways_analy to pathways and analy
}
\examples{

\dontrun{

x<-readxl::read_xlsx(system.file("data", "Col-top50.xlsx", package = "pathways"))
y<-readxl::read_xlsx(system.file("data", "metadata.xlsx", package = "pathways"))
CTSgetR::CTSgetR(y$Sample,"PubChem CID", "KEGG")\%>\%na.omit()->getkeggnames
full_join(getkeggnames,y,by=c("id"="Sample"),keep=T)->getkegg
getkegg$Sample[!is.na(getkegg$KEGG)]<-getkegg$KEGG[!is.na(getkegg$KEGG)]
getkegg$Sample[!is.na(getkegg$KEGG)]<-getkegg$KEGG[!is.na(getkegg$KEGG)]
getkegg\%>\%.[,-c(1:2)]\%>\%na.omit()->data
data[rev(order(data$Sample)),]->data2
rownames(data2)<-data2$Sample
data2[,-1]->data2
library(biomaRt)
mart <- useMart("ensembl","mmusculus_gene_ensembl")
gene_name<-getBM(attributes=c("ensembl_gene_id","entrezgene_id"),
                 filters = "ensembl_gene_id",values = x$Gene, mart = mart)
full_join(gene_name,x,by=c("ensembl_gene_id"="Gene"))->getkegg
getkegg$ensembl_gene_id[!is.na(getkegg$entrezgene_id)]<-getkegg$entrezgene_id[!is.na(getkegg$entrezgene_id)]
getkegg[,-2]->genes
rownames(genes)<-genes$ensembl_gene_id
genes[,-1]->genes
group<-c(rep("A",4),rep("B",5))
colnames(data2)<-colnames(genes)
list(a=data2\%>\%t\%>\%as.data.frame(),b=genes\%>\%t\%>\%as.data.frame())->data
pathways_analy(data = data,group = group,org = "mmu",scale = T)->n

# or
load(system.file("data", "Tes.Rdata",package = "pathways"))
}
}
